name: 'Configure Git'
description: 'Bot GIT configuration steps with GPG signed commits'

inputs:
  gpgPrivId:
    required: true
    description: 'GitHub GPG private key for signed commits (secrets.GPG_PRIVATE_KEY)'

  gpgKeyId:
    required: true
    description: 'GitHub GPG key ID for signed commits (secrets.GPG_KEY_ID)'

  gpgPassphrase:
    required: false
    description: 'GitHub GPG passphrase for signed commits (secrets.GPG_PASSPHRASE)'

runs:
  using: composite
  steps:
    - name: 'Configure Git and Import GPG Key'
      env:
        GPG_PRIVATE_KEY: ${{ inputs.gpgPrivId }}
        GPG_KEY_ID: ${{ inputs.gpgKeyId }}
        GPG_PASSPHRASE: ${{ inputs.gpgPassphrase }}
      shell: bash
      run: |
        mkdir -p ~/.gnupg
        chmod 700 ~/.gnupg

        # Allow pinentry loopback mode
        echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
        echo RELOADAGENT | gpg-connect-agent

        # Import private key
        echo "$GPG_PRIVATE_KEY" | gpg --batch --import

        if [ -n "$GPG_PASSPHRASE" ]; then
          echo "Running passphrase sign test..."
          echo "$GPG_PASSPHRASE" | \
            gpg --batch --yes --pinentry-mode loopback --passphrase-fd 0 \
            --local-user "$GPG_KEY_ID" \
            --sign --output /dev/null --detach-sig <(echo "test") || exit 1
        fi

        # Git config
        git config --global user.name "rocmaz"
        git config --global user.email "rocmaz@users.noreply.github.com"
        git config --global commit.gpgsign true
        git config --global user.signingkey "$GPG_KEY_ID"
        git config --global gpg.program gpg
